/**
 * @license
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://raw.githubusercontent.com/l-lin/angular-datatables/master/LICENSE
 */
/// <reference types="datatables.net" />
import { ElementRef, OnDestroy, OnInit } from '@angular/core';
import { Subject } from 'rxjs';
import { ADTSettings } from './models/settings';
import * as ɵngcc0 from '@angular/core';
export declare class DataTableDirective implements OnDestroy, OnInit {
    private el;
    /**
     * The DataTable option you pass to configure your table.
     */
    dtOptions: ADTSettings;
    /**
     * This trigger is used if one wants to trigger manually the DT rendering
     * Useful when rendering angular rendered DOM
     */
    dtTrigger: Subject<any>;
    /**
     * The DataTable instance built by the jQuery library [DataTables](datatables.net).
     *
     * It's possible to execute the [DataTables APIs](https://datatables.net/reference/api/) with
     * this variable.
     */
    dtInstance: Promise<DataTables.Api>;
    private dt;
    constructor(el: ElementRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private displayTable;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTableDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DataTableDirective, "[datatable]", never, { "dtOptions": "dtOptions"; "dtTrigger": "dtTrigger"; }, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1kYXRhdGFibGVzLmRpcmVjdGl2ZS5kLnRzIiwic291cmNlcyI6WyJhbmd1bGFyLWRhdGF0YWJsZXMuZGlyZWN0aXZlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2wtbGluL2FuZ3VsYXItZGF0YXRhYmxlcy9tYXN0ZXIvTElDRU5TRVxuICovXG4vLy8gPHJlZmVyZW5jZSB0eXBlcz1cImRhdGF0YWJsZXMubmV0XCIgLz5cbmltcG9ydCB7IEVsZW1lbnRSZWYsIE9uRGVzdHJveSwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBBRFRTZXR0aW5ncyB9IGZyb20gJy4vbW9kZWxzL3NldHRpbmdzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERhdGFUYWJsZURpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0IHtcbiAgICBwcml2YXRlIGVsO1xuICAgIC8qKlxuICAgICAqIFRoZSBEYXRhVGFibGUgb3B0aW9uIHlvdSBwYXNzIHRvIGNvbmZpZ3VyZSB5b3VyIHRhYmxlLlxuICAgICAqL1xuICAgIGR0T3B0aW9uczogQURUU2V0dGluZ3M7XG4gICAgLyoqXG4gICAgICogVGhpcyB0cmlnZ2VyIGlzIHVzZWQgaWYgb25lIHdhbnRzIHRvIHRyaWdnZXIgbWFudWFsbHkgdGhlIERUIHJlbmRlcmluZ1xuICAgICAqIFVzZWZ1bCB3aGVuIHJlbmRlcmluZyBhbmd1bGFyIHJlbmRlcmVkIERPTVxuICAgICAqL1xuICAgIGR0VHJpZ2dlcjogU3ViamVjdDxhbnk+O1xuICAgIC8qKlxuICAgICAqIFRoZSBEYXRhVGFibGUgaW5zdGFuY2UgYnVpbHQgYnkgdGhlIGpRdWVyeSBsaWJyYXJ5IFtEYXRhVGFibGVzXShkYXRhdGFibGVzLm5ldCkuXG4gICAgICpcbiAgICAgKiBJdCdzIHBvc3NpYmxlIHRvIGV4ZWN1dGUgdGhlIFtEYXRhVGFibGVzIEFQSXNdKGh0dHBzOi8vZGF0YXRhYmxlcy5uZXQvcmVmZXJlbmNlL2FwaS8pIHdpdGhcbiAgICAgKiB0aGlzIHZhcmlhYmxlLlxuICAgICAqL1xuICAgIGR0SW5zdGFuY2U6IFByb21pc2U8RGF0YVRhYmxlcy5BcGk+O1xuICAgIHByaXZhdGUgZHQ7XG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBwcml2YXRlIGRpc3BsYXlUYWJsZTtcbn1cbiJdfQ==