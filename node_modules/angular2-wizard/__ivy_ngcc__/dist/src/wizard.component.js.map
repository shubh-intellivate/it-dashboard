{"version":3,"file":"wizard.component.js","sources":["../../src/wizard.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Output, EventEmitter, ContentChildren, QueryList, AfterContentInit } from '@angular/core';\nimport { WizardStepComponent } from './wizard-step.component';\n\n@Component({\n  selector: 'form-wizard',\n  template:\n  `<div class=\"card\">\n    <div class=\"card-header\">\n      <ul class=\"nav nav-justified\">\n        <li class=\"nav-item\" *ngFor=\"let step of steps\" [ngClass]=\"{'active': step.isActive, 'enabled': !step.isDisabled, 'disabled': step.isDisabled, 'completed': isCompleted}\">\n          <a (click)=\"goToStep(step)\">{{step.title}}</a>\n        </li>\n      </ul>\n    </div>\n    <div class=\"card-block\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"card-footer\" [hidden]=\"isCompleted\">\n        <button type=\"button\" class=\"btn btn-secondary float-left\" (click)=\"previous()\" [hidden]=\"!hasPrevStep || !activeStep.showPrev\">Previous</button>\n        <button type=\"button\" class=\"btn btn-secondary float-right\" (click)=\"next()\" [disabled]=\"!activeStep.isValid\" [hidden]=\"!hasNextStep || !activeStep.showNext\">Next</button>\n        <button type=\"button\" class=\"btn btn-secondary float-right\" (click)=\"complete()\" [disabled]=\"!activeStep.isValid\" [hidden]=\"hasNextStep\">Done</button>\n    </div>\n  </div>`\n  ,\n  styles: [\n    '.card { height: 100%; }',\n    '.card-header { background-color: #fff; padding: 0; font-size: 1.25rem; }',\n    '.card-block { overflow-y: auto; }',\n    '.card-footer { background-color: #fff; border-top: 0 none; }',\n    '.nav-item { padding: 1rem 0rem; border-bottom: 0.5rem solid #ccc; }',\n    '.active { font-weight: bold; color: black; border-bottom-color: #1976D2 !important; }',\n    '.enabled { cursor: pointer; border-bottom-color: rgb(88, 162, 234); }',\n    '.disabled { color: #ccc; }',\n    '.completed { cursor: default; }'\n  ]\n})\nexport class WizardComponent implements AfterContentInit {\n  @ContentChildren(WizardStepComponent)\n  wizardSteps: QueryList<WizardStepComponent>;\n\n  private _steps: Array<WizardStepComponent> = [];\n  private _isCompleted: boolean = false;\n\n  @Output()\n  onStepChanged: EventEmitter<WizardStepComponent> = new EventEmitter<WizardStepComponent>();\n\n  constructor() { }\n\n  ngAfterContentInit() {\n    this.wizardSteps.forEach(step => this._steps.push(step));\n    this.steps[0].isActive = true;\n  }\n\n  get steps(): Array<WizardStepComponent> {\n    return this._steps.filter(step => !step.hidden);\n  }\n\n  get isCompleted(): boolean {\n    return this._isCompleted;\n  }\n\n  get activeStep(): WizardStepComponent {\n    return this.steps.find(step => step.isActive);\n  }\n\n  set activeStep(step: WizardStepComponent) {\n    if (step !== this.activeStep && !step.isDisabled) {\n      this.activeStep.isActive = false;\n      step.isActive = true;\n      this.onStepChanged.emit(step);\n    }\n  }\n\n  public get activeStepIndex(): number {\n    return this.steps.indexOf(this.activeStep);\n  }\n\n  get hasNextStep(): boolean {\n    return this.activeStepIndex < this.steps.length - 1;\n  }\n\n  get hasPrevStep(): boolean {\n    return this.activeStepIndex > 0;\n  }\n\n  public goToStep(step: WizardStepComponent): void {\n    if (!this.isCompleted) {\n      this.activeStep = step;\n    }\n  }\n\n  public next(): void {\n    if (this.hasNextStep) {\n      let nextStep: WizardStepComponent = this.steps[this.activeStepIndex + 1];\n      this.activeStep.onNext.emit();\n      nextStep.isDisabled = false;\n      this.activeStep = nextStep;\n    }\n  }\n\n  public previous(): void {\n    if (this.hasPrevStep) {\n      let prevStep: WizardStepComponent = this.steps[this.activeStepIndex - 1];\n      this.activeStep.onPrev.emit();\n      prevStep.isDisabled = false;\n      this.activeStep = prevStep;\n    }\n  }\n\n  public complete(): void {\n    this.activeStep.onComplete.emit();\n    this._isCompleted = true;\n  }\n\n}\n"]}