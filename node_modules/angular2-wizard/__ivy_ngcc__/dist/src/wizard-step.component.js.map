{"version":3,"file":"wizard-step.component.js","sources":["../../src/wizard-step.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,sCAAuE;AAWvE,IAAa,mBAAmB;AACjB,IAab;AAEY,QAdH,WAAM,GAAY,KAAK,CAAC;AACnC,QAAW,YAAO,GAAY,IAAI,CAAC;AACnC,QAAW,aAAQ,GAAY,IAAI,CAAC;AACpC,QAAW,aAAQ,GAAY,IAAI,CAAC;AACpC,QACY,WAAM,GAAsB,IAAI,mBAAY,EAAO,CAAC;AAChE,QAAY,WAAM,GAAsB,IAAI,mBAAY,EAAO,CAAC;AAChE,QAAY,eAAU,GAAsB,IAAI,mBAAY,EAAO,CAAC;AACpE,QACU,cAAS,GAAY,KAAK,CAAC;AACrC,QAAE,eAAU,GAAY,IAAI,CAAC;AAC7B,IACkB,CAAC;AACnB,IAEE,sBAAI,yCAAQ;AAAI,aAKhB;AAAc,YACZ,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;AAC1B,QAAE,CAAC;AAEH,aATE,UAAa,QAAiB;AAChC,YAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC9B,YAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,QAAE,CAAC;AAEH;AAA0B;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAHtB;AACH,IAKA,0BAAC;AAAD,CAAC,AA1BD,IA0BC;AAzBU;AAAa,IAArB,YAAK,EAAE;AAAE;AACY,kDADC;AACd;AAAa,IAArB,YAAK,EAAE;AAAE;AACG,mDADoB;AACxB;AAAa,IAArB,YAAK,EAAE;AAAE;AACG,oDADoB;AACxB;AAAa,IAArB,YAAK,EAAE;AAAE;AACE,qDADsB;AACzB;AAAa,IAArB,YAAK,EAAE;AAAE;AAEC,qDAFuB;AAExB;AAAa,IAAtB,aAAM,EAAE;AAAE,8BAAO,mBAAY;AAAE,mDAA8B;AACpD;AAAa,IAAtB,aAAM,EAAE;AAAE,8BAAO,mBAAY;AAAE,mDAA8B;AACpD;AAAa,IAAtB,aAAM,EAAE;AAAE,8BAAW,mBAAY;AAAE,uDAA8B;AAQlE;AAAa,IADZ,YAAK,CAAC,UAAU,CAAC;AACnB;AACI;AACgB,mDAClB;AApBU,mBAAmB,oBAT/B,gBAAS,CAAC,UACT,hCAQE;GARM,EAAE,aAAa,lBASnB,GADO,mBAAmB,CA0B/B;GAjCC,QAAQ,EACR,bAMW,kDAAmB;+CAF7B,MACF,CAAC,tDAC+B","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'wizard-step',\n  template:\n  `\n    <div [hidden]=\"!isActive\">\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class WizardStepComponent {\n  @Input() title: string;\n  @Input() hidden: boolean = false;\n  @Input() isValid: boolean = true;\n  @Input() showNext: boolean = true;\n  @Input() showPrev: boolean = true;\n\n  @Output() onNext: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onPrev: EventEmitter<any> = new EventEmitter<any>();\n  @Output() onComplete: EventEmitter<any> = new EventEmitter<any>();\n\n  private _isActive: boolean = false;\n  isDisabled: boolean = true;\n\n  constructor() { }\n\n  @Input('isActive')\n  set isActive(isActive: boolean) {\n    this._isActive = isActive;\n    this.isDisabled = false;\n  }\n\n  get isActive(): boolean {\n    return this._isActive;\n  }\n\n}\n"]}