import { Calendar } from '@fullcalendar/core';
import { Component, ElementRef, Input, EventEmitter, Output, NgModule } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as ɵngcc0 from '@angular/core';
class CalendarComponent {
    /**
     * @param {?} element
     */
    constructor(element) {
        this.element = element;
        this.initialized = new EventEmitter();
        this.eventClick = new EventEmitter();
        this.eventMouseEnter = new EventEmitter();
        this.eventMouseLeave = new EventEmitter();
        this.eventDragStart = new EventEmitter();
        this.eventDragStop = new EventEmitter();
        this.eventDrop = new EventEmitter();
        this.eventResizeStart = new EventEmitter();
        this.eventResizeStop = new EventEmitter();
        this.eventLeave = new EventEmitter();
        this.eventResize = new EventEmitter();
        this.eventResizableFromStart = new EventEmitter();
        this.allDayMaintainDuration = new EventEmitter();
        this.dragScroll = new EventEmitter();
        this.eventConstraint = new EventEmitter();
        this.eventReceive = new EventEmitter();
        this.drop = new EventEmitter();
        this.select = new EventEmitter();
        this.dateClick = new EventEmitter();
        this.clickButton = new EventEmitter();
        this.fullcalendarEvents = [
            'eventClick',
            'eventMouseEnter',
            'eventMouseLeave',
            'eventDragStart',
            'eventDragStop',
            'eventDrop',
            'eventResizeStart',
            'eventResizeStop',
            'eventLeave',
            'eventResize',
            'eventResizableFromStart',
            'allDayMaintainDuration',
            'dragScroll',
            'eventReceive',
            'drop',
            'select',
            'dateClick'
        ];
        this._reRender = true;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set eventsModel(value) {
        this._eventsModel = value;
        if (this._reRender) {
            setTimeout((/**
             * @return {?}
             */
            () => {
                this.renderEvents(value);
            }), 50);
        }
        else {
            this._reRender = true;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.updateOptions();
        this.calendar = new Calendar(this.element.nativeElement, this.options);
        this.calendar.render();
        this.initialized.emit();
        this.element.nativeElement.addEventListener('click', (/**
         * @param {?} ev
         * @return {?}
         */
        ev => {
            /** @type {?} */
            const closest = ev.target.closest('button');
            if (closest) {
                /** @type {?} */
                const classnames = ev.srcElement.className.split(' ');
                classnames.forEach((/**
                 * @param {?} name
                 * @return {?}
                 */
                name => {
                    if (name.indexOf('button') === name.length - 6) {
                        name = name.replace(/fc|button|-/g, '');
                        if (name != '') {
                            this.buttonEventDispatch(name);
                        }
                    }
                    else if (name.indexOf('chevron')) {
                        name = name.replace(/fc|icon|chevron|-/g, '');
                        switch (name) {
                            case 'right':
                                this.buttonEventDispatch('next');
                                break;
                            case 'left':
                                this.buttonEventDispatch('prev');
                                break;
                            default:
                                break;
                        }
                    }
                }));
            }
        }));
    }
    /**
     * @private
     * @param {?} buttonType
     * @return {?}
     */
    buttonEventDispatch(buttonType) {
        /** @type {?} */
        const currentDetail = {
            buttonType: buttonType,
            data: this.calendar.getDate()
        };
        this.clickButton.emit(currentDetail);
    }
    /**
     * @private
     * @return {?}
     */
    updateOptions() {
        this.fullcalendarEvents.forEach((/**
         * @param {?} element
         * @return {?}
         */
        element => {
            if (!this.options[element]) {
                this.options[element] = (/**
                 * @param {?} info
                 * @return {?}
                 */
                info => {
                    this[element].emit(info);
                });
            }
        }));
    }
    /**
     * @private
     * @param {?} events
     * @return {?}
     */
    renderEvents(events) {
        // https://fullcalendar.io/docs/Calendar-batchRendering
        if (events && events.length) {
            this.calendar.batchRendering((/**
             * @return {?}
             */
            () => {
                this.calendar.removeAllEvents();
                events.forEach((/**
                 * @param {?} ev
                 * @return {?}
                 */
                ev => {
                    this.calendar.addEvent(ev);
                }));
            }));
            this.calendar.rerenderEvents();
        }
    }
}
CalendarComponent.ɵfac = function CalendarComponent_Factory(t) { return new (t || CalendarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
CalendarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CalendarComponent, selectors: [["ng-fullcalendar"]], inputs: { eventsModel: "eventsModel", options: "options" }, outputs: { initialized: "initialized", eventClick: "eventClick", eventMouseEnter: "eventMouseEnter", eventMouseLeave: "eventMouseLeave", eventDragStart: "eventDragStart", eventDragStop: "eventDragStop", eventDrop: "eventDrop", eventResizeStart: "eventResizeStart", eventResizeStop: "eventResizeStop", eventLeave: "eventLeave", eventResize: "eventResize", eventResizableFromStart: "eventResizableFromStart", allDayMaintainDuration: "allDayMaintainDuration", dragScroll: "dragScroll", eventConstraint: "eventConstraint", eventReceive: "eventReceive", drop: "drop", select: "select", dateClick: "dateClick", clickButton: "clickButton" }, decls: 0, vars: 0, template: function CalendarComponent_Template(rf, ctx) { }, encapsulation: 2 });
/** @nocollapse */
CalendarComponent.ctorParameters = () => [
    { type: ElementRef }
];
CalendarComponent.propDecorators = {
    options: [{ type: Input }],
    initialized: [{ type: Output }],
    eventClick: [{ type: Output }],
    eventMouseEnter: [{ type: Output }],
    eventMouseLeave: [{ type: Output }],
    eventDragStart: [{ type: Output }],
    eventDragStop: [{ type: Output }],
    eventDrop: [{ type: Output }],
    eventResizeStart: [{ type: Output }],
    eventResizeStop: [{ type: Output }],
    eventLeave: [{ type: Output }],
    eventResize: [{ type: Output }],
    eventResizableFromStart: [{ type: Output }],
    allDayMaintainDuration: [{ type: Output }],
    dragScroll: [{ type: Output }],
    eventConstraint: [{ type: Output }],
    eventReceive: [{ type: Output }],
    drop: [{ type: Output }],
    select: [{ type: Output }],
    dateClick: [{ type: Output }],
    clickButton: [{ type: Output }],
    eventsModel: [{ type: Input, args: ['eventsModel',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CalendarComponent, [{
        type: Component,
        args: [{
                selector: 'ng-fullcalendar',
                template: ``
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { initialized: [{
            type: Output
        }], eventClick: [{
            type: Output
        }], eventMouseEnter: [{
            type: Output
        }], eventMouseLeave: [{
            type: Output
        }], eventDragStart: [{
            type: Output
        }], eventDragStop: [{
            type: Output
        }], eventDrop: [{
            type: Output
        }], eventResizeStart: [{
            type: Output
        }], eventResizeStop: [{
            type: Output
        }], eventLeave: [{
            type: Output
        }], eventResize: [{
            type: Output
        }], eventResizableFromStart: [{
            type: Output
        }], allDayMaintainDuration: [{
            type: Output
        }], dragScroll: [{
            type: Output
        }], eventConstraint: [{
            type: Output
        }], eventReceive: [{
            type: Output
        }], drop: [{
            type: Output
        }], select: [{
            type: Output
        }], dateClick: [{
            type: Output
        }], clickButton: [{
            type: Output
        }], eventsModel: [{
            type: Input,
            args: ['eventsModel']
        }], options: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class FullCalendarModule {
}
FullCalendarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FullCalendarModule });
FullCalendarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FullCalendarModule_Factory(t) { return new (t || FullCalendarModule)(); }, imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FullCalendarModule, { declarations: [CalendarComponent], exports: [CalendarComponent] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullCalendarModule, [{
        type: NgModule,
        args: [{
                declarations: [CalendarComponent],
                imports: [],
                exports: [CalendarComponent]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { CalendarComponent, FullCalendarModule };

//# sourceMappingURL=ng-fullcalendar.js.map