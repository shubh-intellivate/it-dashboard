{"version":3,"file":"angular-morris-js.js","sources":["ng:/angular-morris-js/out/morris-chart.directive.ts","ng:/angular-morris-js/out/morris-chart.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, AfterViewInit, OnInit, OnDestroy, Input, ElementRef, NgZone, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\n\nimport { ChartOptions, ChartDatas } from './morris-chart.interface';\n\n@Directive({\n  selector: '[mk-morris-js]'\n})\nexport class MorrisChartDirective implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  private window: any = window;\n  private _options: ChartOptions;\n\n  public chartInstance: any;\n\n  @Input() type = 'Line';\n  @Input() options: ChartOptions;\n  @Input() data: ChartDatas;\n  @Output() clickChart = new EventEmitter();\n\n  /*\n   * [constructor description]\n   * @method constructor\n   * @param elementRef [description]\n   * @param ngZone     [description]\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private ngZone: NgZone\n  ) {}\n\n  /*\n   * [ngOnInit description]\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    this._options = Object.assign({}, this.options);\n    this._options.element = this.elementRef.nativeElement;\n    this._options.data = this.data;\n  }\n\n  /*\n   * [ngAfterViewInit description]\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    if(!this.window.Morris) {\n      throw new Error('Please include node_modules/morris.js/morris.js');\n    } else {\n      this.ngZone.runOutsideAngular(() => {\n        this.chartInstance = new this.window.Morris[this.type](this._options);\n        this.chartInstance.on('click', (i, row) => { \n          this.clickChart.emit({ event, i, row });\n        });\n      });\n    }\n  }\n\n  /*\n   * [ngOnChanges description]\n   * @method ngOnChanges\n   * @param changes [description]\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if((changes.data && !changes.data.firstChange) || (changes.options && !changes.options.firstChange)) {\n      Object.assign(this.chartInstance.options, this.options);\n      this.chartInstance.setData(this.data);\n    }\n  }\n\n  /*\n   * [ngOnDestroy description]\n   * @method ngOnDestroy\n   */\n  ngOnDestroy() {\n    if (this.chartInstance.el.empty instanceof Function) {\n      this.chartInstance.el.empty();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MorrisChartDirective } from './morris-chart.directive';\n\n\n@NgModule({\n  declarations: [MorrisChartDirective],\n  exports: [MorrisChartDirective]\n})\nexport class MorrisJsModule { }\n"]}